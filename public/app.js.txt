// Importes de Firebase (CDN)
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js";
import { getAuth, GoogleAuthProvider, signInWithPopup, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-auth.js";
import { getFirestore, collection, addDoc, serverTimestamp } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js";
import { getStorage, ref, uploadBytes, getDownloadURL } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";


<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/12.3.0/firebase-app.js";
  import { getAnalytics } from "https://www.gstatic.com/firebasejs/12.3.0/firebase-analytics.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyA8IlgBs4UqXAS1wGNx6oTFIBvLQPPGit0",
    authDomain: "hu-001-ef266.firebaseapp.com",
    projectId: "hu-001-ef266",
    storageBucket: "hu-001-ef266.firebasestorage.app",
    messagingSenderId: "1092689984100",
    appId: "1:1092689984100:web:d2f52846137329ecabfd71",
    measurementId: "G-Z74HMSTG1E"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const analytics = getAnalytics(app);
</script>

// Inicializar Firebase
const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getFirestore(app);
const storage = getStorage(app);

// Proveedor de login (Google)
const provider = new GoogleAuthProvider();

// Botón de inicio de sesión
document.getElementById("loginBtn").addEventListener("click", async () => {
  await signInWithPopup(auth, provider);
  alert("Sesión iniciada correctamente");
});

// Crear programación HU-001 (ejemplo: Diario 09:00)
document.getElementById("createDaily").addEventListener("click", async () => {
  if (!auth.currentUser) return alert("Primero inicia sesión");
  await addDoc(collection(db, "reportSchedules"), {
    name: "Reporte KPIs Ventas",
    ownerUid: auth.currentUser.uid,
    active: true,
    frequency: "DAILY",
    timeOfDay: "09:00",
    timezone: "America/Mexico_City",
    kpiParams: { area: "ventas", windowDays: 7 },
    createdAt: serverTimestamp(),
    lastRunKey: null
  });
  alert("Programación creada en Firestore (reportSchedules)");
});

// Función para generar un PDF simulado (con jsPDF)
async function generarPdf() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  const fecha = new Date().toLocaleString("es-MX", { timeZone: "America/Mexico_City" });

  doc.setFontSize(18);
  doc.text("Reporte HU-001", 105, 20, { align: "center" });
  doc.setFontSize(12);
  doc.text(`Generado: ${fecha}`, 105, 30, { align: "center" });

  doc.setFontSize(14);
  doc.text("KPIs simulados", 20, 50);
  doc.setFontSize(11);
  doc.text("Ventas 7d: 1250 (meta: 1500)", 20, 60);
  doc.text("Tasa de fallas: 1.8% (meta: 2.0%)", 20, 70);

  return doc.output("blob");
}

// Botón para ejecutar reporte manual
document.getElementById("runNowBtn").addEventListener("click", async () => {
  if (!auth.currentUser) return alert("Primero inicia sesión");

  // Generar PDF simulado
  const pdfBlob = await generarPdf();
  const fileName = new Date().toISOString().replace(/:/g, "-") + ".pdf";

  // Subir a Firebase Storage
  const path = `reports/${auth.currentUser.uid}/manual/${fileName}`;
  const pdfRef = ref(storage, path);
  await uploadBytes(pdfRef, pdfBlob, { contentType: "application/pdf" });
  const url = await getDownloadURL(pdfRef);

  // Guardar log en Firestore
  await addDoc(collection(db, "reportExecutions"), {
    ownerUid: auth.currentUser.uid,
    scheduleId: "manual",
    startedAt: serverTimestamp(),
    finishedAt: serverTimestamp(),
    status: "SUCCESS",
    message: "Reporte generado manualmente",
    pdfPath: path,
    pdfUrl: url,
    trigger: "MANUAL",
    runKey: "manual:" + fileName
  });

  alert("Reporte generado y guardado en Firestore + Storage");
});

